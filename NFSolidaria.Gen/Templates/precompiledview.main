using Cna.Erp.<#module#>.Infrastructure.ORM.Contexto;
using Common.Infrastructure.Log;
using InteractivePreGeneratedViews;
using System;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Infrastructure.MappingViews;
using System.IO;

//[assembly: DbMappingViewCacheType(typeof(DbContext<#module#>), typeof(MappingViewCache<#module#>Genereted))]
public class MappingViewCache<#module#>Genereted : DbMappingViewCache
{

    public static void LoadPreCompiledViews()
    {
		ViewCacheFactory();
    }

	private static void ViewCacheFactory()
    {
		var log = FactoryLog.GetInstace();
        var path = Path.Combine(AppDomain.CurrentDomain.BaseDirectory,"MappingViewCache<#module#>Genereted.xml");
        var ctx = new DbContext<#module#>(log);
		InteractiveViews.SetViewCacheFactory(ctx, new FileViewCacheFactory(path));
    }

    public override string MappingHashValue
    {
        get { return "<#ComputeMappingHashValue#>"; }
    }

    public override DbMappingView GetView(EntitySetBase extent)
    {

		var viewname = string.Format("{0}.{1}", extent.EntityContainer.Name, extent.Name);

<#conditional#>

		return null;

        
    }

	<#viewsList#>


}

